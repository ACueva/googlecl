#summary Frequently asked questions and troubleshooting

= FAQ =

=== Will you support XXX? ===
We're building on top of [http://code.google.com/p/gdata-python-client/ gdata-python-client], so if you don't see it supported there, we won't be supporting it in the foreseeable future.

If you want a service that isn't supported by gdata-python-client, check their [http://code.google.com/p/gdata-python-client/issues/list issue tracker] for a request to support said service. If the issue exists, star it. If not, submit a new issue asking for them to support it.

To request a feature for a service that we do support, file an issue on our [http://code.google.com/p/googlecl/issues/list issue tracker], following the same steps as above.

=== How do I apply patches? ===
If you're as impatient as I am (not recommended), and on some flavor of Linux, try this:

{{{
$ cd /path/to/python/libraries
$ sudo patch -p0 -i /path/to/patch_file
}}}

I *really* recommend reading a proper tutorial on the `patch` command first, though. How about [http://www.linuxtutorialblog.com/post/introduction-using-diff-and-patch-tutorial this one]?

The path used in the `cd` command depends on your operating system and how GoogleCL was installed. For me (Ubuntu 9.10, using setup.py) it is `/usr/local/lib/python2.6/dist-packages`

For Windows, you need to download a patch tool. You could also check out the svn repository by downloading an svn tool (try TortoiseSVN) and following the instructions [http://code.google.com/p/googlecl/source/checkout here]. The repository will have all patches from issues marked "fixed", but has the potential to be more unstable than the releases in the Downloads section.

=== How do I uninstall GoogleCL? ===
Why would I tell you that? :P

Installing from source with `python setup.py install` means you probably need to remove files by hand. [http://stackoverflow.com/questions/1550226/python-setup-py-uninstall This] provides some helpful instructions on how to do that.

If you used the .deb, try `sudo dpkg -r /path/to/deb_file`. Replacing the -r with -P will also remove configuration files.

=== Why isn't GoogleCL showing up in my "Authorized websites" list? ===
This process apparently takes a while for installed applications. If nothing has shown up after 3 hours, please file an issue.

=== How do I make calendar events with numerical titles? ===
Add single quotes and double quotes around the name. For example:
{{{$ google calendar add '"12345"'}}}

= Troubleshooting =

=== no attribute 'SetOAuthInputParameters' ===
You need a later version of the [http://code.google.com/p/gdata-python-client/ gdata python library]. The earliest version we tested with was 1.2.4.

=== "ValueError: Invalid resource id" when using Docs ===
Upgrading to gdata 2.0.12 seems to fix this. It has been seen in versions as late as 2.0.2.

=== Timestamp too far from current time ===
pigritor reports:
"yep. problem was in system and kernel clock.
I read this: http://en.gentoo-wiki.com/wiki/Time_Synchronization
then:"
{{{
$ sudo ntpdate -ds google.com;
$ sudo tzselect;
$ TZ='[SELECTED_TIME_ZONE]'; export TZ;  #Substitute your timezone, for example, 'America/Toronto'
$ sudo hwclock --systohc
}}}
"and that 'time error' gone "

Issue 55 is currently tracking progress on this issue.

=== Won't work from behind a proxy ===
If you're seeing a stack trace ending in
{{{
File "/usr/lib/python2.6/site-packages/atom/http.py", line 240, in _prepare_connection
    p_sock.connect((proxy_url.host, int(proxy_url.port)))
  File "<string>", line 1, in connect
TypeError: coercing to Unicode: need string or buffer, NoneType found
}}}

upgrading to gdata-python-client 2.0.10 seems to work for most or all users.

You may also want to check out [http://code.google.com/p/gdatacopier/wiki/ProxySupport these steps], which claim to be generic to the gdata-api.

maarecek mentions:
"I had to export proxy in format http://myproxy:8080 instead of only myproxy:8080"
{{{
set http_proxy=http://myproxy:8080
set https_proxy=https://myproxy:8080
}}}

=== GoogleCL behaves as if an earlier version of gdata is installed ===
If you have installed version 2.0.x but are still getting bugs/issues tied to earlier versions of gdata, the older version may still be lurking on your machine. Ubuntu/Debian users can use
{{{
$ dpkg --list | grep gdata
... snipped ...
ii  python-gdata                               1.2.4-0ubuntu2                             Google Data Python client library
}}}

If you see that, then an early version (1.2.4, in fact) is still installed. You can get rid of it with `dpkg -r python-gdata`

Also check the directories in your PYTHONPATH:
{{{
$ echo $PYTHONPATH
:/usr/local/lib/python2.6/site-packages:/usr/local/lib/python2.6/dist-packages
$ ls /usr/local/lib/python2.6/site-packages gdata*
}}}

If PYTHONPATH is not set for you, or its directories do not contain the new gdata, set it to point at the directory where your newer version of gdata resides (`export PYTHONPATH=$PYTHONPATH:/path/to/directory`)